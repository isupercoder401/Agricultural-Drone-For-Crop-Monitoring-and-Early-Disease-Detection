from pymavlink import mavutil

def connect_pixhawk(port):
    try:
        connection = mavutil.mavlink_connection(port, baud=115200)
        print(f"Connected to Pixhawk on {port}")
        return connection
    except Exception as e:
        print(f"Error connecting to Pixhawk: {e}")
        return None

def get_flight_mode(mav):
    try:
        # Request the current flight mode
        mav.mav.command_long_send(
            mav.target_system, mav.target_component,
            mavutil.mavlink.MAV_CMD_REQUEST_MESSAGE,
            0,  # Confirmation
            mavutil.mavlink.MAV_MODE_FLAG_CUSTOM_MODE_ENABLED,  # Request custom mode
            0, 0, 0, 0, 0, 0
        )

        # Wait for the response
        msg = mav.recv_match(type='COMMAND_ACK', blocking=True, timeout=2)

        if msg and msg.command == mavutil.mavlink.MAV_CMD_REQUEST_MESSAGE:
            flight_mode = msg.result
            print(f"Flight Mode: {flight_mode} ({FLIGHT_MODE_LABELS.get(flight_mode, 'Unknown')})")
        else:
            print("Failed to retrieve flight mode")

    except Exception as e:
        print(f"Error retrieving flight mode: {e}")

# Define labels for flight modes
FLIGHT_MODE_LABELS = {
    0: "Stabilize",
    # Add more labels as needed
}

def main():
    usb_com_port = 'COM11'  # Change this to the correct COM port
    pixhawk_conn = connect_pixhawk(usb_com_port)

    if pixhawk_conn:
        get_flight_mode(pixhawk_conn)

        # Close the connection when done
        pixhawk_conn.close()

if __name__ == "__main__":
    main()
